digraph test_graph{
	16 [label="testprogram.pack1.C.recursion(int)"];
	13 [label="java.io.PrintStream.println()"];
	21 [label="java.io.PrintStream.println(java.lang.String)"];
	1 [label="testprogram.pack2.D.methA()"];
	3 [label="testprogram.pack2.B.<init>()"];
	4 [label="testprogram.pack1.C.<init>(int)"];
	7 [label="testprogram.pack1.A.methA()"];
	8 [label="testprogram.pack1.A.methB()"];
	18 [label="testprogram.pack1.C.staticMeth()"];
	6 [label="testprogram.pack1.A$1.<init>(testprogram.pack1.A)"];
	9 [label="testprogram.pack2.B.methA()"];
	11 [label="testprogram.pack1.A$InnerClass.foo()"];
	12 [label="testprogram.pack1.A$Goo.inc(int)"];
	20 [label="testprogram.pack1.A.<init>(int,int,int,int,int,int,int,int,int)"];
	14 [label="java.util.ArrayList.<init>()"];
	19 [label="testprogram.pack1.Harness.main(java.lang.String[])"];
	17 [label="testprogram.pack2.B.internalA()"];
	15 [label="java.util.Collections.sort(java.util.List)"];
	0 [label="testprogram.pack2.B.methB(int)"];
	10 [label="testprogram.pack2.B.methB()"];
	2 [label="testprogram.pack1.A.exec()"];
	5 [label="testprogram.pack1.A$InnerClass.<init>(testprogram.pack1.A)"];
	0 -> 1 [label="60"]
	2 -> 3 [label="1"]
	2 -> 4 [label="1"]
	2 -> 5 [label="1"]
	2 -> 6 [label="1"]
	2 -> 7 [label="10"]
	2 -> 8 [label="83"]
	2 -> 9 [label="17"]
	2 -> 10 [label="3"]
	2 -> 0 [label="6"]
	2 -> 11 [label="9"]
	2 -> 12 [label="12"]
	2 -> 13 [label="101"]
	2 -> 14 [label="1"]
	2 -> 15 [label="202"]
	2 -> 16 [label="1"]
	16 -> 16 [label="44"]
	9 -> 17 [label="17"]
	4 -> 18 [label="44"]
	19 -> 20 [label="1"]
	19 -> 2 [label="1"]
	19 -> 21 [label="1"]
}